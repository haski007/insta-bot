/*
instagrapi-rest

RESTful API Service for instagrapi

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instapi

import (
	"encoding/json"
)

// StoryMedia struct for StoryMedia
type StoryMedia struct {
	X *float32 `json:"x,omitempty"`
	Y *float32 `json:"y,omitempty"`
	Z *float32 `json:"z,omitempty"`
	Width *float32 `json:"width,omitempty"`
	Height *float32 `json:"height,omitempty"`
	Rotation *float32 `json:"rotation,omitempty"`
	IsPinned *bool `json:"is_pinned,omitempty"`
	IsHidden *bool `json:"is_hidden,omitempty"`
	IsSticker *bool `json:"is_sticker,omitempty"`
	IsFbSticker *bool `json:"is_fb_sticker,omitempty"`
	MediaPk int32 `json:"media_pk"`
	UserId *int32 `json:"user_id,omitempty"`
	ProductType *string `json:"product_type,omitempty"`
	MediaCode *string `json:"media_code,omitempty"`
}

// NewStoryMedia instantiates a new StoryMedia object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStoryMedia(mediaPk int32) *StoryMedia {
	this := StoryMedia{}
	var x float32 = 0.5
	this.X = &x
	var y float32 = 0.4997396
	this.Y = &y
	var z float32 = 0
	this.Z = &z
	var width float32 = 0.8
	this.Width = &width
	var height float32 = 0.60572916
	this.Height = &height
	var rotation float32 = 0.0
	this.Rotation = &rotation
	this.MediaPk = mediaPk
	return &this
}

// NewStoryMediaWithDefaults instantiates a new StoryMedia object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStoryMediaWithDefaults() *StoryMedia {
	this := StoryMedia{}
	var x float32 = 0.5
	this.X = &x
	var y float32 = 0.4997396
	this.Y = &y
	var z float32 = 0
	this.Z = &z
	var width float32 = 0.8
	this.Width = &width
	var height float32 = 0.60572916
	this.Height = &height
	var rotation float32 = 0.0
	this.Rotation = &rotation
	return &this
}

// GetX returns the X field value if set, zero value otherwise.
func (o *StoryMedia) GetX() float32 {
	if o == nil || o.X == nil {
		var ret float32
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoryMedia) GetXOk() (*float32, bool) {
	if o == nil || o.X == nil {
		return nil, false
	}
	return o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *StoryMedia) HasX() bool {
	if o != nil && o.X != nil {
		return true
	}

	return false
}

// SetX gets a reference to the given float32 and assigns it to the X field.
func (o *StoryMedia) SetX(v float32) {
	o.X = &v
}

// GetY returns the Y field value if set, zero value otherwise.
func (o *StoryMedia) GetY() float32 {
	if o == nil || o.Y == nil {
		var ret float32
		return ret
	}
	return *o.Y
}

// GetYOk returns a tuple with the Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoryMedia) GetYOk() (*float32, bool) {
	if o == nil || o.Y == nil {
		return nil, false
	}
	return o.Y, true
}

// HasY returns a boolean if a field has been set.
func (o *StoryMedia) HasY() bool {
	if o != nil && o.Y != nil {
		return true
	}

	return false
}

// SetY gets a reference to the given float32 and assigns it to the Y field.
func (o *StoryMedia) SetY(v float32) {
	o.Y = &v
}

// GetZ returns the Z field value if set, zero value otherwise.
func (o *StoryMedia) GetZ() float32 {
	if o == nil || o.Z == nil {
		var ret float32
		return ret
	}
	return *o.Z
}

// GetZOk returns a tuple with the Z field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoryMedia) GetZOk() (*float32, bool) {
	if o == nil || o.Z == nil {
		return nil, false
	}
	return o.Z, true
}

// HasZ returns a boolean if a field has been set.
func (o *StoryMedia) HasZ() bool {
	if o != nil && o.Z != nil {
		return true
	}

	return false
}

// SetZ gets a reference to the given float32 and assigns it to the Z field.
func (o *StoryMedia) SetZ(v float32) {
	o.Z = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *StoryMedia) GetWidth() float32 {
	if o == nil || o.Width == nil {
		var ret float32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoryMedia) GetWidthOk() (*float32, bool) {
	if o == nil || o.Width == nil {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *StoryMedia) HasWidth() bool {
	if o != nil && o.Width != nil {
		return true
	}

	return false
}

// SetWidth gets a reference to the given float32 and assigns it to the Width field.
func (o *StoryMedia) SetWidth(v float32) {
	o.Width = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *StoryMedia) GetHeight() float32 {
	if o == nil || o.Height == nil {
		var ret float32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoryMedia) GetHeightOk() (*float32, bool) {
	if o == nil || o.Height == nil {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *StoryMedia) HasHeight() bool {
	if o != nil && o.Height != nil {
		return true
	}

	return false
}

// SetHeight gets a reference to the given float32 and assigns it to the Height field.
func (o *StoryMedia) SetHeight(v float32) {
	o.Height = &v
}

// GetRotation returns the Rotation field value if set, zero value otherwise.
func (o *StoryMedia) GetRotation() float32 {
	if o == nil || o.Rotation == nil {
		var ret float32
		return ret
	}
	return *o.Rotation
}

// GetRotationOk returns a tuple with the Rotation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoryMedia) GetRotationOk() (*float32, bool) {
	if o == nil || o.Rotation == nil {
		return nil, false
	}
	return o.Rotation, true
}

// HasRotation returns a boolean if a field has been set.
func (o *StoryMedia) HasRotation() bool {
	if o != nil && o.Rotation != nil {
		return true
	}

	return false
}

// SetRotation gets a reference to the given float32 and assigns it to the Rotation field.
func (o *StoryMedia) SetRotation(v float32) {
	o.Rotation = &v
}

// GetIsPinned returns the IsPinned field value if set, zero value otherwise.
func (o *StoryMedia) GetIsPinned() bool {
	if o == nil || o.IsPinned == nil {
		var ret bool
		return ret
	}
	return *o.IsPinned
}

// GetIsPinnedOk returns a tuple with the IsPinned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoryMedia) GetIsPinnedOk() (*bool, bool) {
	if o == nil || o.IsPinned == nil {
		return nil, false
	}
	return o.IsPinned, true
}

// HasIsPinned returns a boolean if a field has been set.
func (o *StoryMedia) HasIsPinned() bool {
	if o != nil && o.IsPinned != nil {
		return true
	}

	return false
}

// SetIsPinned gets a reference to the given bool and assigns it to the IsPinned field.
func (o *StoryMedia) SetIsPinned(v bool) {
	o.IsPinned = &v
}

// GetIsHidden returns the IsHidden field value if set, zero value otherwise.
func (o *StoryMedia) GetIsHidden() bool {
	if o == nil || o.IsHidden == nil {
		var ret bool
		return ret
	}
	return *o.IsHidden
}

// GetIsHiddenOk returns a tuple with the IsHidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoryMedia) GetIsHiddenOk() (*bool, bool) {
	if o == nil || o.IsHidden == nil {
		return nil, false
	}
	return o.IsHidden, true
}

// HasIsHidden returns a boolean if a field has been set.
func (o *StoryMedia) HasIsHidden() bool {
	if o != nil && o.IsHidden != nil {
		return true
	}

	return false
}

// SetIsHidden gets a reference to the given bool and assigns it to the IsHidden field.
func (o *StoryMedia) SetIsHidden(v bool) {
	o.IsHidden = &v
}

// GetIsSticker returns the IsSticker field value if set, zero value otherwise.
func (o *StoryMedia) GetIsSticker() bool {
	if o == nil || o.IsSticker == nil {
		var ret bool
		return ret
	}
	return *o.IsSticker
}

// GetIsStickerOk returns a tuple with the IsSticker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoryMedia) GetIsStickerOk() (*bool, bool) {
	if o == nil || o.IsSticker == nil {
		return nil, false
	}
	return o.IsSticker, true
}

// HasIsSticker returns a boolean if a field has been set.
func (o *StoryMedia) HasIsSticker() bool {
	if o != nil && o.IsSticker != nil {
		return true
	}

	return false
}

// SetIsSticker gets a reference to the given bool and assigns it to the IsSticker field.
func (o *StoryMedia) SetIsSticker(v bool) {
	o.IsSticker = &v
}

// GetIsFbSticker returns the IsFbSticker field value if set, zero value otherwise.
func (o *StoryMedia) GetIsFbSticker() bool {
	if o == nil || o.IsFbSticker == nil {
		var ret bool
		return ret
	}
	return *o.IsFbSticker
}

// GetIsFbStickerOk returns a tuple with the IsFbSticker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoryMedia) GetIsFbStickerOk() (*bool, bool) {
	if o == nil || o.IsFbSticker == nil {
		return nil, false
	}
	return o.IsFbSticker, true
}

// HasIsFbSticker returns a boolean if a field has been set.
func (o *StoryMedia) HasIsFbSticker() bool {
	if o != nil && o.IsFbSticker != nil {
		return true
	}

	return false
}

// SetIsFbSticker gets a reference to the given bool and assigns it to the IsFbSticker field.
func (o *StoryMedia) SetIsFbSticker(v bool) {
	o.IsFbSticker = &v
}

// GetMediaPk returns the MediaPk field value
func (o *StoryMedia) GetMediaPk() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MediaPk
}

// GetMediaPkOk returns a tuple with the MediaPk field value
// and a boolean to check if the value has been set.
func (o *StoryMedia) GetMediaPkOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaPk, true
}

// SetMediaPk sets field value
func (o *StoryMedia) SetMediaPk(v int32) {
	o.MediaPk = v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *StoryMedia) GetUserId() int32 {
	if o == nil || o.UserId == nil {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoryMedia) GetUserIdOk() (*int32, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *StoryMedia) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *StoryMedia) SetUserId(v int32) {
	o.UserId = &v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *StoryMedia) GetProductType() string {
	if o == nil || o.ProductType == nil {
		var ret string
		return ret
	}
	return *o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoryMedia) GetProductTypeOk() (*string, bool) {
	if o == nil || o.ProductType == nil {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *StoryMedia) HasProductType() bool {
	if o != nil && o.ProductType != nil {
		return true
	}

	return false
}

// SetProductType gets a reference to the given string and assigns it to the ProductType field.
func (o *StoryMedia) SetProductType(v string) {
	o.ProductType = &v
}

// GetMediaCode returns the MediaCode field value if set, zero value otherwise.
func (o *StoryMedia) GetMediaCode() string {
	if o == nil || o.MediaCode == nil {
		var ret string
		return ret
	}
	return *o.MediaCode
}

// GetMediaCodeOk returns a tuple with the MediaCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoryMedia) GetMediaCodeOk() (*string, bool) {
	if o == nil || o.MediaCode == nil {
		return nil, false
	}
	return o.MediaCode, true
}

// HasMediaCode returns a boolean if a field has been set.
func (o *StoryMedia) HasMediaCode() bool {
	if o != nil && o.MediaCode != nil {
		return true
	}

	return false
}

// SetMediaCode gets a reference to the given string and assigns it to the MediaCode field.
func (o *StoryMedia) SetMediaCode(v string) {
	o.MediaCode = &v
}

func (o StoryMedia) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.X != nil {
		toSerialize["x"] = o.X
	}
	if o.Y != nil {
		toSerialize["y"] = o.Y
	}
	if o.Z != nil {
		toSerialize["z"] = o.Z
	}
	if o.Width != nil {
		toSerialize["width"] = o.Width
	}
	if o.Height != nil {
		toSerialize["height"] = o.Height
	}
	if o.Rotation != nil {
		toSerialize["rotation"] = o.Rotation
	}
	if o.IsPinned != nil {
		toSerialize["is_pinned"] = o.IsPinned
	}
	if o.IsHidden != nil {
		toSerialize["is_hidden"] = o.IsHidden
	}
	if o.IsSticker != nil {
		toSerialize["is_sticker"] = o.IsSticker
	}
	if o.IsFbSticker != nil {
		toSerialize["is_fb_sticker"] = o.IsFbSticker
	}
	if true {
		toSerialize["media_pk"] = o.MediaPk
	}
	if o.UserId != nil {
		toSerialize["user_id"] = o.UserId
	}
	if o.ProductType != nil {
		toSerialize["product_type"] = o.ProductType
	}
	if o.MediaCode != nil {
		toSerialize["media_code"] = o.MediaCode
	}
	return json.Marshal(toSerialize)
}

type NullableStoryMedia struct {
	value *StoryMedia
	isSet bool
}

func (v NullableStoryMedia) Get() *StoryMedia {
	return v.value
}

func (v *NullableStoryMedia) Set(val *StoryMedia) {
	v.value = val
	v.isSet = true
}

func (v NullableStoryMedia) IsSet() bool {
	return v.isSet
}

func (v *NullableStoryMedia) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStoryMedia(val *StoryMedia) *NullableStoryMedia {
	return &NullableStoryMedia{value: val, isSet: true}
}

func (v NullableStoryMedia) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStoryMedia) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


