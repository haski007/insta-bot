/*
instagrapi-rest

RESTful API Service for instagrapi

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instapi

import (
	"encoding/json"
)

// Usertag struct for Usertag
type Usertag struct {
	User UserShort `json:"user"`
	X float32 `json:"x"`
	Y float32 `json:"y"`
}

// NewUsertag instantiates a new Usertag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsertag(user UserShort, x float32, y float32) *Usertag {
	this := Usertag{}
	this.User = user
	this.X = x
	this.Y = y
	return &this
}

// NewUsertagWithDefaults instantiates a new Usertag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsertagWithDefaults() *Usertag {
	this := Usertag{}
	return &this
}

// GetUser returns the User field value
func (o *Usertag) GetUser() UserShort {
	if o == nil {
		var ret UserShort
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *Usertag) GetUserOk() (*UserShort, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *Usertag) SetUser(v UserShort) {
	o.User = v
}

// GetX returns the X field value
func (o *Usertag) GetX() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.X
}

// GetXOk returns a tuple with the X field value
// and a boolean to check if the value has been set.
func (o *Usertag) GetXOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.X, true
}

// SetX sets field value
func (o *Usertag) SetX(v float32) {
	o.X = v
}

// GetY returns the Y field value
func (o *Usertag) GetY() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Y
}

// GetYOk returns a tuple with the Y field value
// and a boolean to check if the value has been set.
func (o *Usertag) GetYOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Y, true
}

// SetY sets field value
func (o *Usertag) SetY(v float32) {
	o.Y = v
}

func (o Usertag) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["user"] = o.User
	}
	if true {
		toSerialize["x"] = o.X
	}
	if true {
		toSerialize["y"] = o.Y
	}
	return json.Marshal(toSerialize)
}

type NullableUsertag struct {
	value *Usertag
	isSet bool
}

func (v NullableUsertag) Get() *Usertag {
	return v.value
}

func (v *NullableUsertag) Set(val *Usertag) {
	v.value = val
	v.isSet = true
}

func (v NullableUsertag) IsSet() bool {
	return v.isSet
}

func (v *NullableUsertag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsertag(val *Usertag) *NullableUsertag {
	return &NullableUsertag{value: val, isSet: true}
}

func (v NullableUsertag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsertag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


