/*
instagrapi-rest

RESTful API Service for instagrapi

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instapi

import (
	"encoding/json"
	"time"
)

// Media struct for Media
type Media struct {
	Pk string `json:"pk"`
	Id string `json:"id"`
	Code string `json:"code"`
	TakenAt time.Time `json:"taken_at"`
	MediaType int32 `json:"media_type"`
	ProductType *string `json:"product_type,omitempty"`
	ThumbnailUrl *string `json:"thumbnail_url,omitempty"`
	Location *Location `json:"location,omitempty"`
	User UserShort `json:"user"`
	CommentCount *int32 `json:"comment_count,omitempty"`
	LikeCount int32 `json:"like_count"`
	HasLiked *bool `json:"has_liked,omitempty"`
	CaptionText string `json:"caption_text"`
	Usertags []Usertag `json:"usertags"`
	VideoUrl *string `json:"video_url,omitempty"`
	ViewCount *int32 `json:"view_count,omitempty"`
	VideoDuration *float32 `json:"video_duration,omitempty"`
	Title *string `json:"title,omitempty"`
	Resources []Resource `json:"resources,omitempty"`
	ClipsMetadata map[string]interface{} `json:"clips_metadata,omitempty"`
}

// NewMedia instantiates a new Media object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMedia(pk string, id string, code string, takenAt time.Time, mediaType int32, user UserShort, likeCount int32, captionText string, usertags []Usertag) *Media {
	this := Media{}
	this.Pk = pk
	this.Id = id
	this.Code = code
	this.TakenAt = takenAt
	this.MediaType = mediaType
	var productType string = ""
	this.ProductType = &productType
	this.User = user
	var commentCount int32 = 0
	this.CommentCount = &commentCount
	this.LikeCount = likeCount
	this.CaptionText = captionText
	this.Usertags = usertags
	var viewCount int32 = 0
	this.ViewCount = &viewCount
	var videoDuration float32 = 0.0
	this.VideoDuration = &videoDuration
	var title string = ""
	this.Title = &title
	return &this
}

// NewMediaWithDefaults instantiates a new Media object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaWithDefaults() *Media {
	this := Media{}
	var productType string = ""
	this.ProductType = &productType
	var commentCount int32 = 0
	this.CommentCount = &commentCount
	var viewCount int32 = 0
	this.ViewCount = &viewCount
	var videoDuration float32 = 0.0
	this.VideoDuration = &videoDuration
	var title string = ""
	this.Title = &title
	return &this
}

// GetPk returns the Pk field value
func (o *Media) GetPk() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pk
}

// GetPkOk returns a tuple with the Pk field value
// and a boolean to check if the value has been set.
func (o *Media) GetPkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pk, true
}

// SetPk sets field value
func (o *Media) SetPk(v string) {
	o.Pk = v
}

// GetId returns the Id field value
func (o *Media) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Media) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Media) SetId(v string) {
	o.Id = v
}

// GetCode returns the Code field value
func (o *Media) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *Media) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *Media) SetCode(v string) {
	o.Code = v
}

// GetTakenAt returns the TakenAt field value
func (o *Media) GetTakenAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.TakenAt
}

// GetTakenAtOk returns a tuple with the TakenAt field value
// and a boolean to check if the value has been set.
func (o *Media) GetTakenAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TakenAt, true
}

// SetTakenAt sets field value
func (o *Media) SetTakenAt(v time.Time) {
	o.TakenAt = v
}

// GetMediaType returns the MediaType field value
func (o *Media) GetMediaType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MediaType
}

// GetMediaTypeOk returns a tuple with the MediaType field value
// and a boolean to check if the value has been set.
func (o *Media) GetMediaTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaType, true
}

// SetMediaType sets field value
func (o *Media) SetMediaType(v int32) {
	o.MediaType = v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *Media) GetProductType() string {
	if o == nil || o.ProductType == nil {
		var ret string
		return ret
	}
	return *o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Media) GetProductTypeOk() (*string, bool) {
	if o == nil || o.ProductType == nil {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *Media) HasProductType() bool {
	if o != nil && o.ProductType != nil {
		return true
	}

	return false
}

// SetProductType gets a reference to the given string and assigns it to the ProductType field.
func (o *Media) SetProductType(v string) {
	o.ProductType = &v
}

// GetThumbnailUrl returns the ThumbnailUrl field value if set, zero value otherwise.
func (o *Media) GetThumbnailUrl() string {
	if o == nil || o.ThumbnailUrl == nil {
		var ret string
		return ret
	}
	return *o.ThumbnailUrl
}

// GetThumbnailUrlOk returns a tuple with the ThumbnailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Media) GetThumbnailUrlOk() (*string, bool) {
	if o == nil || o.ThumbnailUrl == nil {
		return nil, false
	}
	return o.ThumbnailUrl, true
}

// HasThumbnailUrl returns a boolean if a field has been set.
func (o *Media) HasThumbnailUrl() bool {
	if o != nil && o.ThumbnailUrl != nil {
		return true
	}

	return false
}

// SetThumbnailUrl gets a reference to the given string and assigns it to the ThumbnailUrl field.
func (o *Media) SetThumbnailUrl(v string) {
	o.ThumbnailUrl = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *Media) GetLocation() Location {
	if o == nil || o.Location == nil {
		var ret Location
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Media) GetLocationOk() (*Location, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *Media) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given Location and assigns it to the Location field.
func (o *Media) SetLocation(v Location) {
	o.Location = &v
}

// GetUser returns the User field value
func (o *Media) GetUser() UserShort {
	if o == nil {
		var ret UserShort
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *Media) GetUserOk() (*UserShort, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *Media) SetUser(v UserShort) {
	o.User = v
}

// GetCommentCount returns the CommentCount field value if set, zero value otherwise.
func (o *Media) GetCommentCount() int32 {
	if o == nil || o.CommentCount == nil {
		var ret int32
		return ret
	}
	return *o.CommentCount
}

// GetCommentCountOk returns a tuple with the CommentCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Media) GetCommentCountOk() (*int32, bool) {
	if o == nil || o.CommentCount == nil {
		return nil, false
	}
	return o.CommentCount, true
}

// HasCommentCount returns a boolean if a field has been set.
func (o *Media) HasCommentCount() bool {
	if o != nil && o.CommentCount != nil {
		return true
	}

	return false
}

// SetCommentCount gets a reference to the given int32 and assigns it to the CommentCount field.
func (o *Media) SetCommentCount(v int32) {
	o.CommentCount = &v
}

// GetLikeCount returns the LikeCount field value
func (o *Media) GetLikeCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LikeCount
}

// GetLikeCountOk returns a tuple with the LikeCount field value
// and a boolean to check if the value has been set.
func (o *Media) GetLikeCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LikeCount, true
}

// SetLikeCount sets field value
func (o *Media) SetLikeCount(v int32) {
	o.LikeCount = v
}

// GetHasLiked returns the HasLiked field value if set, zero value otherwise.
func (o *Media) GetHasLiked() bool {
	if o == nil || o.HasLiked == nil {
		var ret bool
		return ret
	}
	return *o.HasLiked
}

// GetHasLikedOk returns a tuple with the HasLiked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Media) GetHasLikedOk() (*bool, bool) {
	if o == nil || o.HasLiked == nil {
		return nil, false
	}
	return o.HasLiked, true
}

// HasHasLiked returns a boolean if a field has been set.
func (o *Media) HasHasLiked() bool {
	if o != nil && o.HasLiked != nil {
		return true
	}

	return false
}

// SetHasLiked gets a reference to the given bool and assigns it to the HasLiked field.
func (o *Media) SetHasLiked(v bool) {
	o.HasLiked = &v
}

// GetCaptionText returns the CaptionText field value
func (o *Media) GetCaptionText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CaptionText
}

// GetCaptionTextOk returns a tuple with the CaptionText field value
// and a boolean to check if the value has been set.
func (o *Media) GetCaptionTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CaptionText, true
}

// SetCaptionText sets field value
func (o *Media) SetCaptionText(v string) {
	o.CaptionText = v
}

// GetUsertags returns the Usertags field value
func (o *Media) GetUsertags() []Usertag {
	if o == nil {
		var ret []Usertag
		return ret
	}

	return o.Usertags
}

// GetUsertagsOk returns a tuple with the Usertags field value
// and a boolean to check if the value has been set.
func (o *Media) GetUsertagsOk() ([]Usertag, bool) {
	if o == nil {
		return nil, false
	}
	return o.Usertags, true
}

// SetUsertags sets field value
func (o *Media) SetUsertags(v []Usertag) {
	o.Usertags = v
}

// GetVideoUrl returns the VideoUrl field value if set, zero value otherwise.
func (o *Media) GetVideoUrl() string {
	if o == nil || o.VideoUrl == nil {
		var ret string
		return ret
	}
	return *o.VideoUrl
}

// GetVideoUrlOk returns a tuple with the VideoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Media) GetVideoUrlOk() (*string, bool) {
	if o == nil || o.VideoUrl == nil {
		return nil, false
	}
	return o.VideoUrl, true
}

// HasVideoUrl returns a boolean if a field has been set.
func (o *Media) HasVideoUrl() bool {
	if o != nil && o.VideoUrl != nil {
		return true
	}

	return false
}

// SetVideoUrl gets a reference to the given string and assigns it to the VideoUrl field.
func (o *Media) SetVideoUrl(v string) {
	o.VideoUrl = &v
}

// GetViewCount returns the ViewCount field value if set, zero value otherwise.
func (o *Media) GetViewCount() int32 {
	if o == nil || o.ViewCount == nil {
		var ret int32
		return ret
	}
	return *o.ViewCount
}

// GetViewCountOk returns a tuple with the ViewCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Media) GetViewCountOk() (*int32, bool) {
	if o == nil || o.ViewCount == nil {
		return nil, false
	}
	return o.ViewCount, true
}

// HasViewCount returns a boolean if a field has been set.
func (o *Media) HasViewCount() bool {
	if o != nil && o.ViewCount != nil {
		return true
	}

	return false
}

// SetViewCount gets a reference to the given int32 and assigns it to the ViewCount field.
func (o *Media) SetViewCount(v int32) {
	o.ViewCount = &v
}

// GetVideoDuration returns the VideoDuration field value if set, zero value otherwise.
func (o *Media) GetVideoDuration() float32 {
	if o == nil || o.VideoDuration == nil {
		var ret float32
		return ret
	}
	return *o.VideoDuration
}

// GetVideoDurationOk returns a tuple with the VideoDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Media) GetVideoDurationOk() (*float32, bool) {
	if o == nil || o.VideoDuration == nil {
		return nil, false
	}
	return o.VideoDuration, true
}

// HasVideoDuration returns a boolean if a field has been set.
func (o *Media) HasVideoDuration() bool {
	if o != nil && o.VideoDuration != nil {
		return true
	}

	return false
}

// SetVideoDuration gets a reference to the given float32 and assigns it to the VideoDuration field.
func (o *Media) SetVideoDuration(v float32) {
	o.VideoDuration = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Media) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Media) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Media) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *Media) SetTitle(v string) {
	o.Title = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *Media) GetResources() []Resource {
	if o == nil || o.Resources == nil {
		var ret []Resource
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Media) GetResourcesOk() ([]Resource, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *Media) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given []Resource and assigns it to the Resources field.
func (o *Media) SetResources(v []Resource) {
	o.Resources = v
}

// GetClipsMetadata returns the ClipsMetadata field value if set, zero value otherwise.
func (o *Media) GetClipsMetadata() map[string]interface{} {
	if o == nil || o.ClipsMetadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ClipsMetadata
}

// GetClipsMetadataOk returns a tuple with the ClipsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Media) GetClipsMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.ClipsMetadata == nil {
		return nil, false
	}
	return o.ClipsMetadata, true
}

// HasClipsMetadata returns a boolean if a field has been set.
func (o *Media) HasClipsMetadata() bool {
	if o != nil && o.ClipsMetadata != nil {
		return true
	}

	return false
}

// SetClipsMetadata gets a reference to the given map[string]interface{} and assigns it to the ClipsMetadata field.
func (o *Media) SetClipsMetadata(v map[string]interface{}) {
	o.ClipsMetadata = v
}

func (o Media) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pk"] = o.Pk
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["taken_at"] = o.TakenAt
	}
	if true {
		toSerialize["media_type"] = o.MediaType
	}
	if o.ProductType != nil {
		toSerialize["product_type"] = o.ProductType
	}
	if o.ThumbnailUrl != nil {
		toSerialize["thumbnail_url"] = o.ThumbnailUrl
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if true {
		toSerialize["user"] = o.User
	}
	if o.CommentCount != nil {
		toSerialize["comment_count"] = o.CommentCount
	}
	if true {
		toSerialize["like_count"] = o.LikeCount
	}
	if o.HasLiked != nil {
		toSerialize["has_liked"] = o.HasLiked
	}
	if true {
		toSerialize["caption_text"] = o.CaptionText
	}
	if true {
		toSerialize["usertags"] = o.Usertags
	}
	if o.VideoUrl != nil {
		toSerialize["video_url"] = o.VideoUrl
	}
	if o.ViewCount != nil {
		toSerialize["view_count"] = o.ViewCount
	}
	if o.VideoDuration != nil {
		toSerialize["video_duration"] = o.VideoDuration
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}
	if o.ClipsMetadata != nil {
		toSerialize["clips_metadata"] = o.ClipsMetadata
	}
	return json.Marshal(toSerialize)
}

type NullableMedia struct {
	value *Media
	isSet bool
}

func (v NullableMedia) Get() *Media {
	return v.value
}

func (v *NullableMedia) Set(val *Media) {
	v.value = val
	v.isSet = true
}

func (v NullableMedia) IsSet() bool {
	return v.isSet
}

func (v *NullableMedia) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMedia(val *Media) *NullableMedia {
	return &NullableMedia{value: val, isSet: true}
}

func (v NullableMedia) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMedia) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


